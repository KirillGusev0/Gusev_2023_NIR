Beginning AutoGluon training... Time limit = 1800s
AutoGluon will save models to 'AutogluonModels\ag-20240422_180928'
=================== System Info ===================
AutoGluon Version:  1.0.0
Python Version:     3.10.13
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.19045
CPU Count:          4
GPU Count:          0
Memory Avail:       0.92 GB / 5.92 GB (15.5%)
Disk Space Avail:   15.79 GB / 118.01 GB (13.4%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'hyperparameters': 'light',
 'known_covariates_names': [],
 'num_val_windows': 3,
 'prediction_length': 48,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'target': 'target',
 'time_limit': 1800,
 'verbosity': 2}

Inferred time series frequency: 'H'
Provided train_data has 353500 rows, 414 time series. Median time series length is 960 (min=700, max=960). 

Provided dataset contains following columns:
	target:           'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2024-04-22 21:09:28
Models that will be trained: ['Naive', 'SeasonalNaive', 'ETS', 'Theta', 'RecursiveTabular', 'DirectTabular', 'TemporalFusionTransformer']
Training timeseries model Naive. Training for up to 224.9s of the 1799.6s of remaining time.
	-0.3721       = Validation score (-MAPE)
	4.58    s     = Training runtime
	2.23    s     = Validation (prediction) runtime
Training timeseries model SeasonalNaive. Training for up to 256.1s of the 1792.7s of remaining time.
	-0.1880       = Validation score (-MAPE)
	3.86    s     = Training runtime
	1.18    s     = Validation (prediction) runtime
Training timeseries model ETS. Training for up to 297.9s of the 1787.7s of remaining time.
	Time limit exceeded... Skipping ETS.
Training timeseries model Theta. Training for up to 297.4s of the 1487.0s of remaining time.
	-0.2374       = Validation score (-MAPE)
	133.10  s     = Training runtime
	42.21   s     = Validation (prediction) runtime
Training timeseries model RecursiveTabular. Training for up to 327.9s of the 1311.7s of remaining time.
	-0.1913       = Validation score (-MAPE)
	46.54   s     = Training runtime
	3.05    s     = Validation (prediction) runtime
Training timeseries model DirectTabular. Training for up to 420.6s of the 1261.9s of remaining time.
	-0.1278       = Validation score (-MAPE)
	60.34   s     = Training runtime
	2.02    s     = Validation (prediction) runtime
Training timeseries model TemporalFusionTransformer. Training for up to 599.7s of the 1199.5s of remaining time.
	-0.7281       = Validation score (-MAPE)
	584.40  s     = Training runtime
	6.31    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DirectTabular': 0.98, 'Naive': 0.01, 'RecursiveTabular': 0.01}
	-0.1277       = Validation score (-MAPE)
	24.38   s     = Training runtime
	7.30    s     = Validation (prediction) runtime
Training complete. Models trained: ['Naive', 'SeasonalNaive', 'Theta', 'RecursiveTabular', 'DirectTabular', 'TemporalFusionTransformer', 'WeightedEnsemble']
Total runtime: 1216.65 s
Best model: WeightedEnsemble
Best model score: -0.1277
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble